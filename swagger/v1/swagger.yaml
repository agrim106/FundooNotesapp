---
openapi: 3.0.1
info:
  title: Fundoo Notes API
  version: v1
  description: API documentation for Fundoo Notes, including authentication and note
    management.
paths:
  "/api/v1/notes":
    post:
      summary: Create a note
      tags:
      - Notes
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: Note created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
              required:
              - title
    get:
      summary: Get all notes
      tags:
      - Notes
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Notes retrieved
  "/api/v1/notes/{id}":
    get:
      summary: Get a note by ID
      tags:
      - Notes
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Note found
    patch:
      summary: Update a note
      tags:
      - Notes
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Note updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
    delete:
      summary: Delete a note
      tags:
      - Notes
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Note deleted
  "/api/v1/notes/{id}/archive_toggle":
    patch:
      summary: Toggle archive status
      tags:
      - Notes
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Archive status toggled
  "/api/v1/notes/{id}/trash_toggle":
    patch:
      summary: Toggle trash status
      tags:
      - Notes
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Trash status toggled
  "/api/v1/users":
    post:
      summary: Register a new user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: User created successfully
        '400':
          description: Invalid email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                phone_number:
                  type: string
                password:
                  type: string
              required:
              - name
              - email
              - password
  "/api/v1/users/login":
    post:
      summary: Log in a user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials
        '400':
          description: Missing parameters
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/api/v1/users/forget":
    post:
      summary: Request password reset
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: OTP sent
        '404':
          description: Email not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
              - email
  "/api/v1/users/reset/{id}":
    patch:
      summary: Reset password with OTP
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Password reset successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                new_password:
                  type: string
                otp:
                  type: string
              required:
              - new_password
              - otp
servers:
- url: http://localhost:3000
  description: Local Development Server
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
- BearerAuth: []
